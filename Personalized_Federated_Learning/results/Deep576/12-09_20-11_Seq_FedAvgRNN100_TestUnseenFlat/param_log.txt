BASE
algorithm = FedAvg
model = RNNModel(
  (rnn): RNN(64, 32, batch_first=True)
  (fc): Linear(in_features=32, out_features=2, bias=True)
)
train_subj_IDs = ['METACPHS_S106', 'METACPHS_S107', 'METACPHS_S108', 'METACPHS_S109', 'METACPHS_S110', 'METACPHS_S111', 'METACPHS_S112', 'METACPHS_S113', 'METACPHS_S114', 'METACPHS_S115', 'METACPHS_S116', 'METACPHS_S117', 'METACPHS_S118', 'METACPHS_S119']
condition_number_lst = [3]
total effective clients = train_subj_IDs*condition_number_lst = 14
device_channels = 64


MODEL HYPERPARAMETERS
lambdaF = 0.0
lambdaD = 0.001
lambdaE = 0.0001
global_rounds = 100
local_epochs = 3
batch_size = 32
local_learning_rate = 0.1
learning_rate_decay = False
learning_rate_decay_gamma = 0.99
pca_channels = 64
normalize_data = True


DEEP NETWORK HYPERPARAMETERS
input_size = 64
hidden_size = 32
sequence_length = 1
output_size = 2


FEDERATED LEARNING PARAMS
starting_update = 10
local_round_threshold = 50


TESTING
test_split_fraction = 0.2
test_split_each_update = False
test_split_users = False
run_train_metrics = True


SEQUENTIAL
sequential = True
live_client_IDs_queue = ['METACPHS_S106', 'METACPHS_S107', 'METACPHS_S118', 'METACPHS_S119']
static_client_IDs = ['METACPHS_S108', 'METACPHS_S109', 'METACPHS_S110', 'METACPHS_S111', 'METACPHS_S112', 'METACPHS_S113', 'METACPHS_S114', 'METACPHS_S115', 'METACPHS_S116', 'METACPHS_S117']
num_liveseq_rounds_per_seqclient = 25
prev_model_directory = C:\Users\kdmen\Desktop\Research\personalization-privacy-risk\Personalized_Federated_Learning\models\cphs\FedAvg\FedAvg_LiveExclusion\FedAvg_server_global.pt